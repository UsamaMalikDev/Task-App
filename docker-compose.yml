services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: test-be-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-testdb}
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: test-be-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # Server API
  server:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    container_name: test-be-server
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3001
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017/${MONGO_DATABASE:-testdb}?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
    depends_on:
      - mongodb
      - redis
    networks:
      - app-network
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/server/node_modules
      - /app/packages/shared-types/node_modules
      - /app/packages/shared-utils/node_modules

  # Worker Service
  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    container_name: test-be-worker
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${WORKER_PORT:-3003}
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017/${MONGO_DATABASE:-testdb}?authSource=admin
      REDIS_URL: redis://redis:6379
      OVERDUE_TASK_CHECK_INTERVAL: ${OVERDUE_TASK_CHECK_INTERVAL:-*/1 * * * *}
      ENABLE_OVERDUE_TASK_SCHEDULER: ${ENABLE_OVERDUE_TASK_SCHEDULER:-true}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      ENABLE_CONSOLE_LOGGING: ${ENABLE_CONSOLE_LOGGING:-true}
    depends_on:
      - mongodb
      - redis
    networks:
      - app-network
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/worker/node_modules
      - /app/packages/shared-types/node_modules
      - /app/packages/shared-utils/node_modules

  # Client Application
  client:
    build:
      context: .
      dockerfile: apps/client/Dockerfile
    container_name: test-be-client
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
    depends_on:
      - server
    networks:
      - app-network
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/client/node_modules
      - /app/packages/shared-types/node_modules
      - /app/packages/shared-utils/node_modules
      - /app/apps/client/.next

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge
